// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect_Apartament.Data;

#nullable disable

namespace Proiect_Apartament.Migrations
{
    [DbContext(typeof(Proiect_ApartamentContext))]
    [Migration("20221126161023_CheckinDate")]
    partial class CheckinDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Proiect_Apartament.Models.Apartament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("ProprietarID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProprietarID");

                    b.ToTable("Apartament");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.CategorieApartament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("ApartamentID")
                        .HasColumnType("int");

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ApartamentID");

                    b.HasIndex("CategorieID");

                    b.ToTable("CategorieApartament");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Inchiriere", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ApartamentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ApartamentID");

                    b.HasIndex("MemberID");

                    b.ToTable("Inchiriere");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Proprietar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeProprietar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Proprietar");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Apartament", b =>
                {
                    b.HasOne("Proiect_Apartament.Models.Proprietar", "Proprietar")
                        .WithMany("Apartamente")
                        .HasForeignKey("ProprietarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprietar");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.CategorieApartament", b =>
                {
                    b.HasOne("Proiect_Apartament.Models.Apartament", "Apartament")
                        .WithMany("CategoriiApartament")
                        .HasForeignKey("ApartamentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect_Apartament.Models.Categorie", "Categorie")
                        .WithMany("CategorieApartament")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartament");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Inchiriere", b =>
                {
                    b.HasOne("Proiect_Apartament.Models.Apartament", "Apartament")
                        .WithMany()
                        .HasForeignKey("ApartamentID");

                    b.HasOne("Proiect_Apartament.Models.Member", "Member")
                        .WithMany("Inchirieri")
                        .HasForeignKey("MemberID");

                    b.Navigation("Apartament");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Apartament", b =>
                {
                    b.Navigation("CategoriiApartament");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Categorie", b =>
                {
                    b.Navigation("CategorieApartament");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Member", b =>
                {
                    b.Navigation("Inchirieri");
                });

            modelBuilder.Entity("Proiect_Apartament.Models.Proprietar", b =>
                {
                    b.Navigation("Apartamente");
                });
#pragma warning restore 612, 618
        }
    }
}
